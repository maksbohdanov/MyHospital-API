// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20221216103818_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("FavorId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("FavorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 12, 12, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            FavorId = 1,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 12, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            FavorId = 2,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 12, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 1,
                            FavorId = 3,
                            PatientId = 2
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 12, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 2,
                            FavorId = 5,
                            PatientId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 12, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 3,
                            FavorId = 7,
                            PatientId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 12, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 4,
                            FavorId = 9,
                            PatientId = 3
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2022, 12, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorId = 5,
                            FavorId = 11,
                            PatientId = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Experience = 3,
                            FirstName = "Анна",
                            LastName = "Мельник",
                            MiddleName = "Олексіївна",
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Experience = 10,
                            FirstName = "Юрій",
                            LastName = "Дрогобич",
                            MiddleName = "Михайлович",
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 3,
                            Experience = 15,
                            FirstName = "Микола",
                            LastName = "Амосов",
                            MiddleName = "Михайлович",
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 4,
                            Experience = 12,
                            FirstName = "Олександр",
                            LastName = "Тур",
                            MiddleName = "Федорович",
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 5,
                            Experience = 7,
                            FirstName = "Сергій",
                            LastName = "Шевченко",
                            MiddleName = "Олександрович",
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 6,
                            Experience = 9,
                            FirstName = "Ольга",
                            LastName = "Кравчук",
                            MiddleName = "Ігорівна",
                            SpecializationId = 6
                        });
                });

            modelBuilder.Entity("DAL.Entities.Favor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FavorNameId")
                        .HasColumnType("int");

                    b.Property<int>("FavorTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FavorNameId");

                    b.HasIndex("FavorTypeId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Favors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FavorNameId = 3,
                            FavorTypeId = 2,
                            Price = 200m,
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 2,
                            FavorNameId = 4,
                            FavorTypeId = 2,
                            Price = 500m,
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 3,
                            FavorNameId = 5,
                            FavorTypeId = 2,
                            Price = 400m,
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 4,
                            FavorNameId = 6,
                            FavorTypeId = 2,
                            Price = 700m,
                            SpecializationId = 1
                        },
                        new
                        {
                            Id = 5,
                            FavorNameId = 1,
                            FavorTypeId = 1,
                            Price = 350m,
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 6,
                            FavorNameId = 2,
                            FavorTypeId = 1,
                            Price = 300m,
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 7,
                            FavorNameId = 1,
                            FavorTypeId = 1,
                            Price = 350m,
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 8,
                            FavorNameId = 2,
                            FavorTypeId = 1,
                            Price = 300m,
                            SpecializationId = 3
                        },
                        new
                        {
                            Id = 9,
                            FavorNameId = 1,
                            FavorTypeId = 1,
                            Price = 300m,
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 10,
                            FavorNameId = 2,
                            FavorTypeId = 1,
                            Price = 250m,
                            SpecializationId = 4
                        },
                        new
                        {
                            Id = 11,
                            FavorNameId = 1,
                            FavorTypeId = 1,
                            Price = 350m,
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 12,
                            FavorNameId = 2,
                            FavorTypeId = 1,
                            Price = 300m,
                            SpecializationId = 5
                        },
                        new
                        {
                            Id = 13,
                            FavorNameId = 1,
                            FavorTypeId = 1,
                            Price = 400m,
                            SpecializationId = 6
                        },
                        new
                        {
                            Id = 14,
                            FavorNameId = 2,
                            FavorTypeId = 1,
                            Price = 350m,
                            SpecializationId = 6
                        });
                });

            modelBuilder.Entity("DAL.Entities.FavorName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FavorNames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Первинна консультація"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Повторна консультація"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Лабораторні дослідження"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ультразвукова діагностика"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Рентгенографія"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Комп'ютерна томографія"
                        });
                });

            modelBuilder.Entity("DAL.Entities.FavorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FavorTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Консультація"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Діагностика"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Петренко Петро",
                            Phone = "380961234567"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Іваненко Іван",
                            Phone = "380501234567"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Семененко Семен",
                            Phone = "380661234567"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Ольченко Ольга",
                            Phone = "380931234567"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Дослідження та діагностика"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Терапія"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Хірургія"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Педіатрія"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Дерматологія"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Психотерапія"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Appointment", b =>
                {
                    b.HasOne("DAL.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Favor", "Favor")
                        .WithMany("Appointments")
                        .HasForeignKey("FavorId")
                        .IsRequired();

                    b.HasOne("DAL.Entities.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Favor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("DAL.Entities.Doctor", b =>
                {
                    b.HasOne("DAL.Entities.Specialization", "Specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("DAL.Entities.Favor", b =>
                {
                    b.HasOne("DAL.Entities.FavorName", "FavorName")
                        .WithMany("Favors")
                        .HasForeignKey("FavorNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.FavorType", "FavorType")
                        .WithMany("Favors")
                        .HasForeignKey("FavorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Specialization", "Specialization")
                        .WithMany("Favors")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavorName");

                    b.Navigation("FavorType");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("DAL.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("DAL.Entities.Favor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("DAL.Entities.FavorName", b =>
                {
                    b.Navigation("Favors");
                });

            modelBuilder.Entity("DAL.Entities.FavorType", b =>
                {
                    b.Navigation("Favors");
                });

            modelBuilder.Entity("DAL.Entities.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("DAL.Entities.Specialization", b =>
                {
                    b.Navigation("Doctors");

                    b.Navigation("Favors");
                });
#pragma warning restore 612, 618
        }
    }
}
